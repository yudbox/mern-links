{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader/index.js","components/Loader/Loader.jsx","components/LinksList/index.js","components/LinksList/LinksList.jsx","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard/index.js","components/LinkCard/LinkCard.jsx","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","components/Navbar/index.js","components/Navbar/NavBar.jsx","App.js","hooks/auth.hook.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","console","log","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthentificated","Loader","style","display","justifyContent","alignItems","height","className","LinksList","links","length","map","link","index","key","_id","from","to","LinksPage","setLinks","useContext","loadLinks","Authorization","receivedLinks","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","pressHandler","e","push","paddingTop","placeholder","id","type","value","onChange","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","receivedLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","disabled","marginRight","onClick","NavBar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEaA,EAAU,WAAO,IAAD,EACKC,oBAAS,GADd,mBAClBC,EADkB,KACTC,EADS,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,KAiCzB,MAAO,CAACH,UAASI,QA7BDC,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAC3ET,GAAW,GADa,SAOhBQ,IACAA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBATV,SAWGG,MAAMP,EAAK,CAACE,SAAQC,OAAMC,YAX7B,cAWdI,EAXc,iBAYDA,EAASC,OAZR,WAYdC,EAZc,OAcfF,EAASG,GAdM,uBAeV,IAAIC,MAAMF,EAAKG,SAAW,sBAfhB,eAkBpBlB,GAAW,GAlBS,kBAoBbe,GApBa,wCAsBpBI,QAAQC,IAAI,QAAS,KAAEF,SACvBlB,GAAW,GACXE,EAAS,KAAEgB,SAxBS,+DAAD,sDA2BxB,IAEuBjB,QAAOoB,WADdjB,uBAAY,kBAAMF,EAAS,QAAO,MChCnDoB,EAAO,aAEAC,EAAcC,wBAAc,CACrCC,MAAO,KACPC,OAAQ,KACRC,MAAOL,EACPM,OAAQN,EACRO,mBAAmB,ICRRC,ECCO,WACpB,OACE,yBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,UAGV,yBAAKC,UAAU,4BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YAEjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YAEjB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gBCpBZC,ECEU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAE1B,OADAnB,QAAQC,IAAI,QAASkB,GAChBA,EAAMC,OAKT,+BACE,+BACE,4BACE,sCACA,6CACA,0CACA,2CAIJ,+BACGD,EAAME,KAAI,SAACC,EAAMC,GAChB,OACE,wBAAIC,IAAKF,EAAKG,KACZ,4BAAKF,EAAQ,GACb,4BAAKD,EAAKI,MACV,4BAAKJ,EAAKK,IACV,4BACE,kBAAC,IAAD,CAAMA,GAAE,kBAAaL,EAAKG,MAA1B,eAtBL,kDCAEG,EAAY,WAAO,IAAD,EACDjD,mBAAS,IADR,mBACpBwC,EADoB,KACbU,EADa,OAEEnD,IAArBE,EAFmB,EAEnBA,QAASI,EAFU,EAEVA,QACTsB,EAAUwB,qBAAW1B,GAArBE,MAEFyB,EAAY9C,sBAAW,sBAAE,4BAAAE,EAAA,+EAEKH,EAAQ,YAAa,MAAO,KAAM,CAC1DgD,cAAc,UAAD,OAAY1B,KAHN,OAEjB2B,EAFiB,OAKvBJ,EAASI,GALc,uGAO5B,CAAC3B,EAAOtB,IAMX,OAJAkD,qBAAW,WACPH,MACD,CAACA,IAEAnD,EACO,kBAAC,EAAD,MAIP,qCACMA,GAAW,kBAAC,EAAD,CAAWuC,MAAOA,MCzB9BgB,EAAa,WACtB,IAAMC,EAAUC,cACVC,EAAOR,qBAAW1B,GAFI,EAGJzB,mBAAS,IAHL,mBAGrB2C,EAHqB,KAGfiB,EAHe,KAIpBvD,EAAYN,IAAZM,QAGRkD,qBAAU,WACNM,OAAOC,EAAEC,qBACV,IAEH,IAIMC,EAAY,uCAAG,WAAOC,GAAP,eAAAzD,EAAA,yDACH,UAAVyD,EAAEpB,IADW,0CAGUxC,EAAQ,qBAAsB,OAAQ,CAAC0C,KAAMJ,GAAO,CACnEU,cAAc,UAAD,OAAYM,EAAKhC,SAJzB,OAGHV,EAHG,OAMTwC,EAAQS,KAAR,kBAAwBjD,EAAK0B,KAAKG,MANzB,yGAAH,sDAWlB,OACI,yBAAKR,UAAU,OACX,yBAAKA,UAAU,mBAAmBL,MAAO,CAAEkC,WAAY,SACnD,yBAAK7B,UAAU,eACX,2BACI8B,YAAY,kBACZC,GAAG,OACHC,KAAK,OACLC,MAAO5B,EACP6B,SAxBE,SAACP,GACnBL,EAAQK,EAAEQ,OAAOF,QAwBDG,WAAYV,IAEhB,2BAAOW,QAAQ,QAAf,iBC1CLC,ECCS,SAAC,GAAc,IAAZjC,EAAW,EAAXA,KACzB,OACE,oCACE,wCACA,yCAAc,uBAAGkC,KAAMlC,EAAKK,GAAIyB,OAAO,SAASK,IAAI,uBAAuBnC,EAAKK,KAChF,oCAAS,uBAAG6B,KAAMlC,EAAKI,KAAM0B,OAAO,SAASK,IAAI,uBAAuBnC,EAAKI,OAC7E,kDAAuB,gCAASJ,EAAKoC,SACzC,gDAAqB,gCAAS,IAAIC,KAAKrC,EAAKsC,MAAMC,yBCFvCC,EAAa,WAAO,IACtBxD,EAASwB,qBAAW1B,GAApBE,MADqB,EAED5B,IAApBM,EAFqB,EAErBA,QAASJ,EAFY,EAEZA,QAFY,EAGLD,mBAAS,MAHJ,mBAGtB2C,EAHsB,KAGhBiB,EAHgB,KAItBwB,EAASC,cAAYhB,GAErBiB,EAAUhF,sBAAW,sBAAE,4BAAAE,EAAA,+EAEMH,EAAQ,aAAD,OAAc+E,GAAU,MAAO,KAAM,CACnE/B,cAAc,UAAD,OAAY1B,KAHR,OAEhB4D,EAFgB,OAKrB3B,EAAQ2B,GALa,uGAO1B,CAAC5D,EAAOyD,EAAQ/E,IAMnB,OAJAkD,qBAAU,WACN+B,MACD,CAACA,IAEArF,EACO,kBAAC,EAAD,MAIP,qCACMA,GAAW0C,GAAQ,kBAAC,EAAD,CAAUA,KAAMA,M,gBC3BpC6C,EAAW,WAEpB,IAAM7B,EAAOR,qBAAW1B,GAFE,EAIqB1B,IAAvCE,EAJkB,EAIlBA,QAASE,EAJS,EAITA,MAAOE,EAJE,EAIFA,QAASkB,EAJP,EAIOA,WAC3BH,ECPCd,uBAAY,SAAAmF,GACZ5B,OAAOC,GAAK2B,GACX5B,OAAOC,EAAE4B,MAAM,CAACC,KAAMF,MAE3B,IDFuB,EAOFzF,mBAAS,CAC7B4F,MAAO,GACPC,SAAU,KATY,mBAOnBC,EAPmB,KAObC,EAPa,KAY1BxC,qBAAU,WACNnC,EAAQjB,GACRoB,MACD,CAACpB,EAAOiB,EAASG,IAGpBgC,qBAAU,WACPM,OAAOC,EAAEC,qBACT,CAAC5D,EAAOiB,EAASG,IAEpB,IAAMyE,EAAgB,SAAA/B,GAClB8B,EAAQ,2BAAID,GAAL,kBAAY7B,EAAEQ,OAAOwB,KAAOhC,EAAEQ,OAAOF,UAG1C2B,EAAe,uCAAG,4BAAA1F,EAAA,+EAEIH,EAAQ,qBAAsB,OAAvB,eAAmCyF,IAF9C,OAET7E,EAFS,OAGhBG,EAAQH,EAAKG,SAHG,uGAAH,qDAUf+E,EAAY,uCAAG,4BAAA3F,EAAA,+EAEOH,EAAQ,kBAAmB,OAApB,eAAgCyF,IAF9C,OAEN7E,EAFM,OAGb0C,EAAK9B,MAAMZ,EAAKU,MAAOV,EAAKW,QAHf,uGAAH,qDAUlB,OACI,yBAAKU,UAAU,OACX,yBAAKA,UAAU,oBACX,+GACA,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,2BACX,0BAAMA,UAAU,cAAhB,gBACA,6BACI,yBAAKA,UAAU,eACX,2BACI8B,YAAY,QACZC,GAAG,QACHC,KAAK,OACL2B,KAAK,QACLzB,SAAUwB,IAEd,2BAAOrB,QAAQ,SAAf,qDAEJ,yBAAKrC,UAAU,eACX,2BACI8B,YAAY,kFACZC,GAAG,WACHC,KAAK,WACL2B,KAAK,WACLzB,SAAUwB,IAEd,2BAAOrB,QAAQ,YAAf,sFAIZ,yBAAKrC,UAAU,eACX,4BACI8D,SAAUnG,EACVqC,UAAU,sBACVL,MAAO,CAACoE,YAAa,IACrBC,QAASH,GAJb,kCAQA,4BACIC,SAAUnG,EACVqG,QAASJ,EACT5D,UAAU,iCAHd,2EEzFTiE,ECGO,WAClB,IAAM5C,EAAOR,qBAAW1B,GAClBgC,EAAUC,cAOhB,OACI,6BACA,yBAAKpB,UAAU,4BAA4BL,MAAO,CAAEuE,QAAS,WAC3D,0BAAMlE,UAAU,cAAhB,iCACA,wBAAI+B,GAAG,aAAa/B,UAAU,8BAC5B,4BAAI,kBAAC,IAAD,CAASU,GAAG,WAAZ,aACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,UAAZ,eACJ,4BAAI,uBAAG6B,KAAK,IAAIyB,QAZF,SAACrC,GACnBA,EAAEwC,iBACF9C,EAAK7B,SACL2B,EAAQS,KAAK,OASL,e,MCcDwC,MAxBf,WAAe,MCNQ,WAAO,IAAD,EACC1G,mBAAS,MADV,mBAClB2B,EADkB,KACXgF,EADW,OAEC3G,oBAAS,GAFV,mBAElB4G,EAFkB,KAEXC,EAFW,OAGG7G,mBAAS,MAHZ,mBAGlB4B,EAHkB,KAGVkF,EAHU,KAKnBjF,EAAQvB,uBAAY,SAACyG,EAAU1C,GACjCsC,EAASI,GACTD,EAAUzC,GAIV2C,aAAaC,QAdF,WAcsBrG,KAAKC,UAAU,CAC5Ce,OAAQyC,EAAI1C,MAAOoF,OAExB,IAEGjF,EAASxB,uBAAY,WACvBqG,EAAS,MACTG,EAAU,MAEVE,aAAaE,WAvBF,cAwBZ,IAcH,OARA3D,qBAAU,WACN,IAAMtC,EAAOL,KAAKuG,MAAMH,aAAaI,QA/B1B,aAgCPnG,GAAQA,EAAKU,OACbE,EAAMZ,EAAKU,MAAOV,EAAKW,QAE3BiF,GAAS,KACV,CAAChF,IAEG,CAAEA,QAAOC,SAAQH,QAAOC,SAAQgF,SD3BSS,GAAxCxF,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,OAAQH,EAFZ,EAEYA,MAAOC,EAFnB,EAEmBA,OAAQgF,EAF3B,EAE2BA,MAChC7E,IAAsBJ,EACtB2F,EAAmBvF,EEJjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwF,KAAK,SAASC,OAAK,GACtB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAK,UAAUC,OAAK,GACvB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAK,eACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUvE,GAAI,cAO1B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOuE,KAAK,KACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUvE,GAAI,QFjB1B,OAAK4D,EAKD,kBAACnF,EAAYgG,SAAb,CAAsBlD,MAAO,CACzB1C,QAAOC,SAAQH,QAAOC,SAAQG,sBAE9B,kBAAC,IAAD,KACMA,GAAqB,kBAAC,EAAD,MACvB,yBAAKO,UAAU,aACVgF,KAVN,kBAAC,EAAD,OGXfI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d4ddfb9e.chunk.js","sourcesContent":["import {useState, useCallback} from 'react'\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        setLoading(true)\n        try {\n            // это условие нужно чтоб передавать корректные данные на сервер, т.е. переводится из объекта в json фотмат\n            // чтоб сервер их корректно обработал\n            // в headers  мы дополнительно сообщаем серверу что мы отправляем json данные\n\n            if (body) {\n                body = JSON.stringify(body)\n                headers['Content-Type'] = 'application/json'\n            }\n            const response = await fetch(url, {method, body, headers})\n            const data = await response.json()\n\n            if (!response.ok) {\n                throw new Error(data.message || 'something not good')\n            }\n\n            setLoading(false)\n\n            return data\n        } catch (e) {\n            console.log('Catch', e.message)\n            setLoading(false)\n            setError(e.message)\n            throw e\n        }\n    }, [])\n    const clearError = useCallback(() => setError(null), [])\n    return {loading, request, error, clearError}\n}","import { createContext} from 'react'\n\nconst noop = () => {}\n\nexport const AuthContext = createContext({\n    token: null,\n    userId: null,\n    login: noop,\n    logout: noop,\n    isAuthentificated: false\n})","import { Loader } from './Loader'\nexport default Loader","import React from \"react\";\n\nexport const Loader = () => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <div className=\"preloader-wrapper active\">\n        <div className=\"spinner-layer spinner-red-only\">\n          <div className=\"circle-clipper left\">\n            <div className=\"circle\" />\n          </div>\n          <div className=\"gap-patch\">\n            <div className=\"circle\" />\n          </div>\n          <div className=\"circle-clipper right\">\n            <div className=\"circle\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { LinksList } from './LinksList'\nexport default LinksList","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const LinksList = ({ links }) => {\n  console.log('links', links)\n  if (!links.length) {\n    return <p>There are no links</p>;\n  }\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>№</th>\n          <th>Original link</th>\n          <th>Saved link</th>\n          <th>Open link</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {links.map((link, index) => {\n          return (\n            <tr key={link._id}>\n              <td>{index + 1}</td>\n              <td>{link.from}</td>\n              <td>{link.to}</td>\n              <td>\n                <Link to={`/detail/${link._id}`}>Open</Link>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport {useHttp} from '../hooks/http.hook'\nimport {AuthContext} from '../context/AuthContext'\nimport Loader from '../components/Loader'\nimport LinksList from '../components/LinksList'\n\nexport const LinksPage = () => {\n    const [links, setLinks] = useState([])\n    const { loading, request } = useHttp()\n    const { token } = useContext(AuthContext)\n\n    const loadLinks = useCallback( async () => {\n        try {\n            const receivedLinks = await request('/api/link', 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setLinks(receivedLinks)\n        } catch (error) {}\n    }, [token, request])\n\n    useEffect( () => {\n        loadLinks()\n    }, [loadLinks])\n\n    if (loading) {\n        return <Loader />\n    }\n\n    return(\n        <>\n            {!loading && <LinksList links={links} />}\n        </>\n    )\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport { useHttp } from '../hooks/http.hook'\nimport {AuthContext} from '../context/AuthContext'\nimport {useHistory} from 'react-router-dom' \n\nexport const CreatePage = () => {\n    const history = useHistory()\n    const auth = useContext(AuthContext)\n    const [link, setLink] = useState('')\n    const { request } = useHttp();\n\n    // данный useEffect делает инпуты окна регистрации активными после вылогинивания\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n\n    const changeHandler = (e) => {\n        setLink(e.target.value)\n    }\n\n    const pressHandler = async (e) => {\n        if (e.key === 'Enter') {\n            try {\n                const data = await request('/api/link/generate', 'POST', {from: link}, {\n                    Authorization: `Bearer ${auth.token}`\n                })\n                history.push(`/detail/${data.link._id}`)\n            } catch (error) { }\n        }\n\n    }\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\" style={{ paddingTop: '2rem' }}>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Insert the link\"\n                        id=\"link\"\n                        type=\"text\"\n                        value={link}\n                        onChange={changeHandler}\n                        onKeyPress={pressHandler}\n                    />\n                    <label htmlFor=\"link\">Your link</label>\n                </div>\n            </div>\n        </div>\n    )\n}","import { LinkCard } from './LinkCard'\nexport default LinkCard","import React from \"react\";\n\nexport const LinkCard = ({ link }) => {\n  return (\n    <>\n      <h2>The Link</h2>\n      <p>Your link: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\n      <p>From: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\n      <p>Quantity of clicks: <strong>{link.clicks}</strong></p>\n  <p>Date of creation: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\n    </>\n  );\n};\n","import React, {useCallback, useContext, useState, useEffect} from \"react\";\nimport {useParams} from 'react-router-dom'\nimport {useHttp} from '../hooks/http.hook'\nimport {AuthContext} from '../context/AuthContext'\nimport Loader from '../components/Loader'\nimport LinkCard from '../components/LinkCard'\n\nexport const DetailPage = () => {\n    const {token} = useContext(AuthContext)\n    const {request, loading} = useHttp()\n    const[link, setLink] = useState(null)\n    const linkId = useParams().id //this param id placed in file routes.js in path=\"/detail/:id\"\n    \n    const getLink = useCallback( async() => {\n        try {\n           const receivedLink =  await request(`/api/link/${linkId}`, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setLink(receivedLink)\n        } catch (error) {}\n    }, [token, linkId, request])\n\n    useEffect(() => {\n        getLink()\n    }, [getLink])\n    \n    if (loading) {\n        return <Loader />\n    }\n\n    return(\n        <>\n            {!loading && link && <LinkCard link={link} />}\n        </>\n    )\n}","import React, {useEffect, useState, useContext} from \"react\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {useMessage} from \"../hooks/message.hook\";\nimport { AuthContext } from '../context/AuthContext'\n\nexport const AuthPage = () => {\n\n    const auth = useContext(AuthContext)\n\n    const  {loading, error, request, clearError} = useHttp()\n    const message = useMessage()\n\n    const [form, setForm] = useState({\n        email: '',\n        password: ''\n    })\n\n    useEffect(() => {\n        message(error)\n        clearError()\n    }, [error, message, clearError])\n\n    // данный useEffect делает инпуты окна регистрации активными после вылогинивания\n    useEffect(() => {\n       window.M.updateTextFields()\n    }, [error, message, clearError])\n\n    const changeHandler = e => {\n        setForm({...form, [e.target.name]: e.target.value })\n    }\n\n    const registerHandler = async () => {\n        try {\n            const  data = await request('/api/auth/register', 'POST', {...form})\n            message(data.message)\n        } catch (e) {\n\n        }\n\n    }\n\n    const loginHandler = async () => {\n        try {\n            const  data = await request('/api/auth/login', 'POST', {...form})\n            auth.login(data.token, data.userId)\n        } catch (e) {\n\n        }\n\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n                <h1>Сократи ссылку</h1>\n                <div className=\"card blue darken-1\">\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title\">Autorization</span>\n                        <div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"email\"\n                                    id=\"email\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    onChange={changeHandler}\n                                />\n                                <label htmlFor=\"email\">Введите email</label>\n                            </div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Введите пароль\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    onChange={changeHandler}\n                                />\n                                <label htmlFor=\"password\">Введите пароль</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-action\">\n                        <button\n                            disabled={loading}\n                            className=\"btn yellow darken-4\"\n                            style={{marginRight: 10}}\n                            onClick={loginHandler}\n                        >\n                            Войти\n                        </button>\n                        <button\n                            disabled={loading}\n                            onClick={registerHandler}\n                            className=\"btn grey lighten-1 black-text\"\n                        >\n                            Регистрация\n                        </button>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import {useCallback} from \"react\";\n\nexport const useMessage = () => {\n    return useCallback(text => {\n        if(window.M && text) {\n            window.M.toast({html: text})\n        }\n    }, [])\n}\n","import { NavBar } from './NavBar'\nexport default NavBar","import React, { useContext } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../../context/AuthContext'\n\nexport const NavBar = () => {\n    const auth = useContext(AuthContext)\n    const history = useHistory()\n\n    const logoutHandler = (e) => {\n        e.preventDefault()\n        auth.logout()\n        history.push('/')\n    }\n    return (\n        <nav>\n        <div className=\"nav-wrapper blue darken-1\" style={{ padding: '0 2rem' }}>\n          <span className=\"brand-logo\">App for saving favorite links</span>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            <li><NavLink to=\"/create\">Add link</NavLink></li>\n            <li><NavLink to=\"/links\">Links List</NavLink></li>\n            <li><a href=\"/\" onClick={logoutHandler}>Logout</a></li>\n\n          </ul>\n        </div>\n      </nav>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useRoutes } from './routes';\nimport { useAuth } from './hooks/auth.hook'\nimport { AuthContext } from './context/AuthContext'\nimport NavBar from './components/Navbar';\nimport Loader from './components/Loader'\nimport 'materialize-css';\n\n\nfunction App() {\n    // забрали из хука все данные для аутентификации, если token есть значит аутентиф. true\n    const { login, logout, token, userId, ready } = useAuth()\n    const isAuthentificated = !!token   //привели строку к булевому значению\n    const routes = useRoutes(isAuthentificated)\n\n    if (!ready) {\n        return <Loader />\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            login, logout, token, userId, isAuthentificated\n        }}>\n            <Router>\n                { isAuthentificated && <NavBar />}\n                <div className=\"container\">\n                    {routes}\n                </div>\n            </Router>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import { useState, useCallback, useEffect } from 'react'\nconst storgeName = 'userData'\n\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null)\n    const [ready, setReady] = useState(false) //данное свойство  нужно чтобы после перезагрузки не гдавной страницы она не редиректилась на Главную\n    const [userId, setUserId] = useState(null)\n\n    const login = useCallback((jwtToken, id)=> {\n        setToken(jwtToken)\n        setUserId(id)\n        // localStorage это встроенное хранилище в браузер(для страницы не более 5 мб)\n        // в которое мы сохранили объект storageName b передали userId: id, token: jwtToken \n        // чтобы useCallback не ругался на зависимости для userId и token\n        localStorage.setItem(storgeName, JSON.stringify({\n            userId: id, token: jwtToken\n        }))\n    }, [])\n\n    const logout = useCallback(()=> {\n        setToken(null)\n        setUserId(null)\n        // после вылогинивания очистили кэш\n        localStorage.removeItem(storgeName)\n    }, [])\n\n\n    // данный метод нужен для того чтоб пользователь не логинился после каждого закрытия окна браузера\n    // т.е. обращаемся к localStorage через getItem(storgeName) и приводим его из JSON в объект\n    // если объект существует и в нем есть токен data && data.token запускаем функцию login\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storgeName))\n        if (data && data.token) {\n            login(data.token, data.userId)\n        }\n        setReady(true)\n    }, [login])\n\n    return { login, logout, token, userId, ready }\n}","import React from \"react\";\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport {LinksPage} from \"./pages/LinksPage\";\nimport {CreatePage} from \"./pages/CreatePage\";\nimport {DetailPage} from \"./pages/DetailPage\";\nimport {AuthPage} from \"./pages/AuthPage\";\n\nexport const useRoutes = isAuth => {\n    if (isAuth) {\n        return (\n            <Switch>\n                <Route path=\"/links\" exact>\n                    <LinksPage />\n                </Route>\n                <Route path=\"/create\" exact>\n                    <CreatePage />\n                </Route>\n                <Route path=\"/detail/:id\" >\n                    <DetailPage />\n                </Route>\n                <Route >\n                    <Redirect to={\"/create\"} />\n                </Route>\n            </Switch>\n        )\n    }\n\n    return (\n        <Switch>\n            <Route path=\"/\" >\n                <AuthPage />\n            </Route>\n            <Route >\n                <Redirect to={\"/\"} />\n            </Route>\n        </Switch>\n    )\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}